name: Check Rust
on:
  pull_request:

# stop in-progress on new push
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  FOUNDRY_PROFILE: ci

jobs:
  cargo-fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - name: Check-Out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Nightly
        run: |
          rustup toolchain install nightly
          rustup component add --toolchain nightly-x86_64-unknown-linux-gnu rustfmt

      - name: cargo +nightly fmt
        run: cargo +nightly fmt --all -- --check

  cargo-check:
    name: cargo check
    runs-on: ubuntu-latest
    steps:
      - name: Check-Out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - uses: Swatinem/rust-cache@v2
        with:
          key: cargo-check
          cache-on-failure: true

      - name: cargo check --workspace --all-features
        run: cargo check --workspace --all-features

  cargo-clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - name: Check-Out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - uses: Swatinem/rust-cache@v2
        with:
          key: cargo-clippy
          cache-on-failure: true

      - name: cargo clippy --workspace --all-features
        run: cargo clippy --workspace --all-features

  cargo-fix:
    name: cargo fix
    runs-on: ubuntu-latest
    steps:
      - name: Check-Out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - uses: Swatinem/rust-cache@v2
        with:
          key: cargo-fix
          cache-on-failure: true

      - name: cargo fix --workspace --all-features
        run: |
          # Run cargo fix on the project
          cargo fix --workspace --all-features

          # Check for local git changes
          if ! git diff --exit-code; then
              echo "There are local changes after running 'cargo fix --workspace --all-features' ❌"
              exit 1
          else
              echo "No changes detected after running 'cargo fix --workspace --all-features' ✅"
          fi

  cargo-test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - name: Check-Out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - uses: Swatinem/rust-cache@v2
        with:
          key: cargo-test
          cache-on-failure: true

      - name: cargo test --workspace
        run: cargo test --workspace

  contracts:
    name: forge fmt && forge test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./contracts
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: 0.4.18

      - name: Setup python virtual environment
        run: uv venv .venv --python 3.12

      - name: Sync python dependencies
        run: uv pip install -r requirements.txt

      - name: Show Forge version
        run: forge --version

      - name: Utilize Shared Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: forge
          cache-on-failure: true

      - name: Run Forge fmt
        run: forge fmt --check
        id: fmt

      - name: Run Forge tests
        run: forge test -vvv --ffi
        id: test
